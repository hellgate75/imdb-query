{
  "name": "Imdb-query",
  "tagline": "Simple IMDb Java8 crawler",
  "body": "# IMDb Search Shell\r\n\r\n\r\n##Goals\r\n\r\nThis software has the goal to provide a simple IM-Db crawler. This crawler at the moment has not configuration to allow to different Movie Databases.\r\n\r\n\r\n\r\n##Technology\r\n\r\nThis software is entirely written in Java 1.8 and it's provided of a command line suite to activate the crawling. It's a passive system surfer using multiple threads and collecting the hierarchy in a specific standard output.\r\n\r\nThe system is provided of a single running interface and a multiple customizable Output formatter and Output device interface. These classes are sibling of two interfaces in order : `ResultFormatter` and `ResultCollector`.\r\n\r\nThe software has been written with the following minimal design patterns :\r\n  * **Builder** (`WebRestQueryConfigurationBuilder`)\r\n  * **Method Factory** (`WebRestQueryHelper#parseParametersAndRunCrawler`)\r\n  * **Abstract Factory** (`WebRestQuery` and `WebRestQueryConfiguration`)\r\n  * **Command** (`WebRestQuery`) recursive on itself on the scheduler request.\r\n  * **Bridge** (`ResultFormatter`, `ResultCollector`) \r\n  * **Observer** (`WebRestQuery` in order to `WebRestQueryProcess`) \r\n  * **Visitor** (`WebRestQueryConfiguration` is a Visitor behalf `WebRestQueryProcess` for the `Result` surfing state)\r\n\r\nThe application is a snapshot release because it doesn't gather the my minimum level of isolation and test harness, due to the first few effort provided.\r\n\r\nIn the future we will improve this application providing a wider range of configuration attributes, writing multiple formatters and collectors, providing a specific interpreter for the target platforms, define a Spring Boot and Spring Web configuration, isolating the API and providing a persistent layer to operate offline on API Search Project (dry-run, re-run, time schedule, remote access for defying and/or run processes behalf deamon agents). Just right now, we detach a Project UID that is transversable to all the application layer, and it can be persisted on a SQL (such as H2, ...), NoSQL (such as MongoDb, ..), File (such as a json file directory, ...) and/or configurable cache systems (such as ehcache, ...) all that in a kind of node environment application server, with specific a configuration, providing a configuration, a clustering, an administration and a maintenance services.\r\n\r\nThe current command usage is completely dynamic and the current formatters and collectors are recovered by the related implementation package. Implementing new elements automatically are presented to the user. Any attribute has a default value included in a properties file, including the web site URL, so the errors can be related to the human mistakes, only!! :D\r\n\r\n\r\n\r\n##Prerequisites \r\n\r\n**Java 1.8** or upper and **Maven 3.x**. The exported variable **JAVA_HOME** pointing to the Java8 base folder.\r\n\r\n\r\n##NOTE \r\n\r\nDue to reduced time most of the test has been put in hold at the moment. We decline any responsability related to damages directly or indirectly related to the use of this study library. \r\n\r\n\r\n##Build \r\n\r\nTo build the application you can use the scripts *build.cmd* or *build.sh*.\r\n\r\nThe Maven 3.x command line to build the project is : \r\n\r\n`mvn -U -up clean cobertura:cobertura javadoc:jar source:jar install`\r\n\r\n\r\n\r\n##Command Line interface\r\n\r\nTo test the command line interface there is a **windows command** and a **linux shell executable** shell scripts in the `bin` directory. To have the usage list you need simply use the `--help` option. Alternatively you can use the folder bin jar `query.jar` in the base project folder.\r\n\r\nHere an example of use:\r\n\r\nUsage: api-search [options]\r\n\r\nsamples: api-search --format=simple --api imdb --movie \"Indiana Jones\"\r\n         api-search --movie \"Herry Potter\"\r\noptions:\r\n--format\t\tIdentifies the site map format\r\n     available formats :\r\n     plain\t\tPlain Text Site Map Format\r\ndefault : plain\r\n--output\t\tIdentifies output device\r\n     available output :\r\n     stdout\t\tStandard Output Writer\r\ndefault : stdout\r\n--extends\t\tIdentifies the number of threads extension on the surf. This is the minimum number of threads\r\n\t\t\trunning on the site hierarchy discovery\r\ndefault : 10\r\n-Dmovie=<value>\t\tIdentifies the movie title query name\r\n--movie\t\tIdentifies the movie title query name\r\ndefault : null\r\n-DexactSearch=<value>\t\tIdentifies the exact title search\r\n--exactSearch\t\tIdentifies the exact title search\r\ndefault : true\r\n-Dapi=<value>\t\tIdentifies the default used API database\r\n--api\t\tIdentifies the default used API database\r\n     available engines :\r\n     tmdb\t\tThe Movie DB Rest API implementation (use -DexactSearch=0)\r\n     imdb\t\tIMDB Rest API implementation\r\n     omdb\t\tOMDB Rest API implementation - APIKey activation in progress\r\ndefault : com.web.libraries.imdbquery.api.controller.engines.TMDBApiEngine@6366ebe0\r\n\r\n\r\n\r\n## Release Version\r\n\r\n`1.0.0-SNAPSHOOT`\r\n\r\n\r\n\r\n##Road Map\r\n\r\n* *T.B.D.*\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}